cmake_minimum_required(VERSION 3.18)

project(faiss C CXX CUDA)

if(NOT MSVC)
	message("adding CXX flags -std=c++14 -fPIC -m64	-Wall -g -O3  -msse4 -mpopcnt -fopenmp -Wno-sign-compare -fpermissive")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -fPIC -m64 -Wall -g -O3  -msse4 -mpopcnt -fopenmp -Wno-sign-compare -fpermissive")
else(NOT MSVC)
	# set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
	add_definitions(-D__AVX__ -D__SSE__)
endif(NOT MSVC)
add_definitions(-DFINTEGER=int)

# Specify FAISS header files
file(GLOB faiss_headers
  include/faiss/*.h
  include/faiss/impl/*.h
  include/faiss/utils/*.h
)

# Specify FAISS source files
file(GLOB faiss_sources
  src/*.cpp
  src/impl/*.cpp 
  src/utils/*.cpp
)

# Specify GPUFAISS header files
file(GLOB faiss_headers
  include/faiss/gpu/*.h
  include/faiss/gpu/*.cuh
  include/faiss/gpu/impl/*.h
  include/faiss/gpu/impl/*.cuh
  include/faiss/gpu/utils/*.h
  include/faiss/gpu/utils/*.cuh
)

# Specify GPUFAISS source files
file(GLOB gpufaiss_sources
  src/gpu/*.cpp
  src/gpu/*.cu
  src/gpu/impl/*.cpp 
  src/gpu/impl/*.cu 
  src/gpu/utils/*.cpp
  src/gpu/utils/*.cu
  src/gpu/utils/blockselect/*.cpp
  src/gpu/utils/blockselect/*.cu
  src/gpu/utils/nvidia/*.cpp
  src/gpu/utils/nvidia/*.cu
  src/gpu/utils/warpselect/*.cpp
  src/gpu/utils/warpselect/*.cu
)

# Specify FAISS library
add_library(faiss STATIC ${faiss_sources})
target_link_libraries(faiss openblas)
target_include_directories(faiss PUBLIC include)
set_property(TARGET faiss PROPERTY CUDA_ARCHITECTURES 52 75)

# Specify gpuFAISS library
add_library(gpufaiss STATIC ${gpufaiss_sources})
target_link_libraries(gpufaiss faiss cublas)
target_include_directories(gpufaiss PUBLIC include)
set_property(TARGET gpufaiss PROPERTY CUDA_ARCHITECTURES 52 75)


